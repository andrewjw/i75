name: Build And Test

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Code Style
        run: |
          ./code_style.sh
      - name: Generate Fonts
        run: |
          python3 utils/generate_fonts.py
      - name: Test
        run: |
          ./run_tests.sh


  release:
    runs-on: ubuntu-latest
    concurrency: release
    environment: Production
    if: github.repository == 'andrewjw/i75' && github.ref == 'refs/heads/main'
    needs: build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Generate Fonts
        run: |
          python3 utils/generate_fonts.py
      - name: Submit Coverage
        run: |
          ./run_tests.sh
          COVERALLS_REPO_TOKEN=${{ secrets.I75_COVERALLS_REPO_TOKEN }} coveralls
      - name: Release
        run: |
          git config --global user.email "andrewjwilkinson@gmail.com"
          git config --global user.name "Andrew Wilkinson"
          export VERSION=$(semantic-release --noop version)
          GH_TOKEN=${{ secrets.GITHUB_TOKEN }} semantic-release version
          if [ -d "dist/" ]; then
            twine check dist/*
            TWINE_USERNAME=__token__ TWINE_PASSWORD=${{ secrets.PYPI_TOKEN }} twine upload dist/*
            GH_TOKEN=${{ secrets.GITHUB_TOKEN }} semantic-release publish
          fi
 
